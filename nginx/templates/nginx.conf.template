# File: nginx.conf.template
# Directory: /deepseek-coder-setup/nginx/templates/

# NGINX Configuration for DeepSeek-Coder Web UI
# With GZIP compression, rate limiting, and security features

# Note: The 'user' directive is removed as it's already defined in the main nginx.conf

worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Log Format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    # GZIP Configuration
    include /etc/nginx/gzip.conf;

    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size ${MAX_BODY_SIZE};

    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;

    # Security Headers
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:; connect-src 'self'";

    # IP Address Whitelist Configuration
    # Currently set to allow all IPs (value=1)
    geo $whitelist {
        default 1;  # Set to 1 to allow all IPs by default (no whitelist)
                    # Change to 0 to enable whitelist mode
        
        # Local networks - these are always allowed when whitelist is active
        # 127.0.0.1/32 1;        # localhost
        # ::1/128 1;             # localhost IPv6
        
        # Example of network range whitelist (currently commented out)
        # Uncomment and modify these lines to enable IP restrictions
        
        # Option 1: CIDR notation for network range
        # 192.168.1.0/24 1;      # Allows all IPs from 192.168.1.0 to 192.168.1.255
        
        # Option 2: IP range using start-end notation
        # 192.168.1.10-192.168.1.255 1;  # Allows IPs from 192.168.1.10 to 192.168.1.255
        
        # Individual IP examples
        # 203.0.113.15 1;        # Example IP
        # 203.0.113.25 1;        # Example IP
    }

    # Rate Limiting Zones
    # 1. General rate limiting
    limit_req_zone $binary_remote_addr zone=general_limit:10m rate=${RATE_LIMIT_REQS}r/m;
    
    # 2. Login attempt rate limiting
    limit_req_zone $binary_remote_addr zone=login_limit:10m rate=${FAILED_LOGIN_LIMIT}r/m;
    
    # Rate limit status page for failed login protection
    limit_req_status 429;

    server {
        listen 80;
        server_name _;
        
        # Root directory for static files
        root /usr/share/nginx/html;
        
        # IP Whitelist check - currently allows all due to default=1 above
        # To enable whitelist, change default value to 0 above and uncomment desired IP ranges
        if ($whitelist = 0) {
            return 403;
        }
        
        # Main application proxy
        location / {
            # General rate limiting
            limit_req zone=general_limit burst=5 nodelay;
            
            proxy_pass http://${WEB_UI_HOST}:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 60s;
        }
        
        # Login endpoint with stricter rate limiting
        location /login {
            limit_req zone=login_limit burst=3 nodelay;
            limit_req_status 429;
            
            proxy_pass http://${WEB_UI_HOST}:8000/login;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Static files
        location /static/ {
            alias /usr/share/nginx/html/static/;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
        }
        
        # Custom 403 error page for unauthorized IP access
        error_page 403 /unauthorized.html;
        location = /unauthorized.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        # Custom 429 error page for rate limiting
        error_page 429 /rate_limited.html;
        location = /rate_limited.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
}